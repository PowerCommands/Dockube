
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s

    scrape_configs:
      - job_name: 'prometheus'
        static_configs:
          - targets: ['localhost:9090']
      - job_name: 'minio'
        metrics_path: /minio/v2/metrics/cluster
        static_configs:
          - targets: ['minio:9000']
      - job_name: 'gitlab-webservice'
        metrics_path: /-/metrics
        static_configs:
          - targets: ['gitlab-webservice-default.gitlab.svc.cluster.local:8080']
      - job_name: 'gitlab-exporter'
        static_configs:
          - targets: ['gitlab-gitlab-exporter.gitlab.svc.cluster.local:9168']
      - job_name: 'gitlab-postgresql'
        static_configs:
          - targets: ['gitlab-postgresql-metrics.gitlab.svc.cluster.local:9187']
      - job_name: 'gitlab-redis'
        static_configs:
          - targets: ['gitlab-redis-metrics.gitlab.svc.cluster.local:9121']
      - job_name: 'argocd'
        metrics_path: /metrics
        static_configs:
          - targets: ['argocd-metrics.argocd.svc.cluster.local:8082']
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  labels:
    app: prometheus
spec:
  replicas: $$REPLICAS$$
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      nodeSelector:
        kubernetes.io/hostname: $$NODE_NAME$$
      containers:
        - name: prometheus
          image: prom/prometheus:latest
          resources:
            requests:
              cpu: "$$CPU_REQUEST$$"
              memory: "$$MEMORY_REQUEST$$"
            limits:
              cpu: "$$CPU_LIMIT$$"
              memory: "$$MEMORY_LIMIT$$"
          ports:
            - containerPort: 9090
          volumeMounts:
            - name: config-volume
              mountPath: /etc/prometheus/
      volumes:
        - name: config-volume
          configMap:
            name: prometheus-config
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  labels:
    app: prometheus
spec:
  type: ClusterIP
  ports:
    - port: 9090
      targetPort: 9090
  selector:
    app: prometheus
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: prometheus
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - prometheus.$$DOMAIN_NAME$$
      secretName: prometheus-tls
  rules:
    - host: prometheus.$$DOMAIN_NAME$$
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: prometheus
                port:
                  number: 9090
